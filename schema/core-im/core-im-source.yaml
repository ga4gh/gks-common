$schema: "https://json-schema.org/draft/2020-12/schema"
$id: "https://w3id.org/ga4gh/schema/gks-core-im/1.x/core-im-source.yaml"
title: GKS Common Core Information Model Class Definitions
strict: true

$defs:
  Entity:
    description: >-
      Entity is the root class of the 'gks-common' core information model classes - those that
      have identifiers and other general metadata like labels, xrefs, urls, descriptions, etc.
      All common classes descend from and inherit its attributes.
    heritableProperties:
      id:
        type: string
        description: >-
          The 'logical' identifier of the entity in the system of record, e.g. a UUID. This 'id' is
          unique within a given system. The identified entity may have a different 'id' in a different
          system, or may refer to an 'id' for the shared concept in another system (e.g. a CURIE).
      label:
        type: string
        description: A primary name for the entity.
      description:
        type: string
        description: A free-text description of the entity.
      alternativeLabels:
        type: array
        ordered: false
        items:
          type: string
        description: Alternative name(s) for the Entity.
      extensions:
        type: array
        ordered: true
        items:
          $ref: "#/$defs/Extension"
        description: >-
          A list of extensions to the entity. Extensions are not expected to be natively understood,
          but may be used for pre-negotiated exchange of message attributes between systems.

  DomainEntity:
    inherits: Entity
    description: >-
      An Entity that is specific to a particular biomedical domain such as disease, therapeutics, or genes.
      Domain Entities are considered as 'concept-level' entities, as opposed to particular instances. e.g.
      'Lung Cancer', not 'patient123's lung cancer'. Or 'Erlotinib', not the particular doses given to a
      patient on a specific occasion.
    heritableProperties:
      type:
        type: string
      mappings:
        type: array
        ordered: false
        items:
          $ref: "#/$defs/ConceptMapping"
        description: >-
          A list of mappings to concepts in terminologies or code systems. Each mapping should
          include a coding and a relation.
    heritableRequired:
      - type

  InformationEntity:
    inherits: Entity
    description: >-
      Information Entities are abstract (non-physical) entities that are about something (i.e. they carry
      information about things in the real world).
    heritableProperties:
      type:
        type: string
        const: InformationEntity
        default: InformationEntity
        description: MUST be "InformationEntity".
      specifiedBy:
        oneOf:
        - $ref: "#/$defs/Method"
        - $ref: "#/$defs/IRI"
        description: >-
          A :ref:`Method` that describes all or part of the process through which the information was
          generated.
      contributions:
        type: array
        ordered: true
        items:
          $ref: "#/$defs/Contribution"
        description: >-
          A list of :ref:`Contribution` objects that describe the activities performed by agents upon this entity.
      isReportedIn:
        type: array
        ordered: false
        items:
          oneOf:
          - $ref: "#/$defs/Document"
          - $ref: "#/$defs/IRI"
        description: A document in which the information content is expressed.
      dateAuthored:
        type: string
        format: datetime
        description: Indicates when the information content expressed in the Information Entity was generated.
      derivedFrom:
        type: array
        ordered: false
        items:
          $ref: "#/$defs/InformationEntity"
        description: Another Information Entity from which this Information Entity is derived, in whole or in part.
      recordMetadata:
        $ref: "#/$defs/RecordMetadata"
        description: Metadata that applies to a specific concrete record of information as encoded in a particular system.
    heritableRequired:
      - id
      - type

  Contribution:
    type: object
    inherits: Entity
    maturity: draft
    description: >-
      An action taken by an agent in contributing to the creation, modification, assessment, or
      deprecation of a particular entity (e.g. a Statement, EvidenceLine, DataItem, Publication, etc.)
    properties:
      type:
        type: string
        const: Contribution
        default: Contribution
        description: MUST be "Contribution".
      contributor:
        $ref: "#/$defs/Agent"
        description: >-
          The agent that made the contribution.
      date:
        type: string
        format: date
        description: >-
          The date on which the contribution was made. The date SHOULD be formatted as a date string
          in ISO format "YYYY-MM-DD".
      contributionMadeTo:
        $ref: "#/$defs/InformationEntity"
        description: The artifact toward which the contribution was made.
      activity:
        $ref: "#/$defs/Coding"
        description: >-
          SHOULD describe a concept descending from the Contributor Role Ontology.

  Agent:
    type: object
    inherits: Entity
    maturity: draft
    description: >-
      An autonomous actor (person, organization, or computational agent) that bears some form
      of responsibility for an activity taking place, for the existence of an entity, or for
      another agent's activity.
    properties:
      type:
        type: string
        const: Agent
        default: Agent
        description: MUST be "Agent".
      name:
        type: string
        description: The descriptive name of the agent.
      subtype:
        type: string
        description: A more specific type of agent the agent represents.
        enum:
          - person
          - organization
          - computer

  Document:
    type: object
    inherits: InformationEntity
    maturity: draft
    description: a representation of a physical or digital document
    properties:
      type:
        type: string
        const: Document
        default: Document
        description: Must be "Document"
      subtype:
        $ref: "#/$defs/Coding"
        description: >-
          A more specific type for the document (e.g. a publication, patent, pathology report)
      title:
        type: string
        description: The title of the Document
      url:
        type: string
        description: A URL at which the document may be retrieved.
        format: uri
        pattern: "^(https?|s?ftp)://"
      doi:
        type: string
        pattern: "^10.(\\d+)(\\.\\d+)*/[\\w\\-\\.]+"
        description: >-
          A `Digital Object Identifier <https://www.doi.org/the-identifier/what-is-a-doi/>_`
          for the document.
      pmid:
        type: integer
        description: A `PubMed unique identifier <https://en.wikipedia.org/wiki/PubMed#PubMed_identifier>`_.

  Method:
    type: object
    inherits: InformationEntity
    maturity: draft
    description: >-
      A set of instructions that specify how to achieve some objective (e.g. experimental protocols,
      curation guidelines, rule sets, etc.)
    properties:
      type:
        type: string
        const: Method
        default: Method
        description: MUST be "Method".
      isReportedIn:
        oneOf:
        - $ref: "#/$defs/IRI"
        - $ref: "#/$defs/Document"
      subtype:
        $ref: "#/$defs/Coding"
        description: >-
          A more specific type of entity the method represents (e.g. Variant Interpretation Guideline,
          Experimental Protocol)
      license:
        type: string
        description: >-
          A particular license that dictates legal permissions for how a published method (e.g. an
          experimental protocol, workflow specification, curation guideline) can be used.

# below are all Utility type classes that do not inherit from Entity and are not typed explicitly

  RecordMetadata:
    type: object
    maturity: draft
    description: >-
      A reusable structure that encapsulates provenance metadata about a serialized data record or
      object in a particular dataset (as opposed to provenance about the real world entity this
      record or object represents).
    properties:
      recordIdentifier:
        type: string
        description: >-
          The business identifier of the record described in the RecordMetadata object (required
          when the record described is not the one in the present system)
      recordVersion:
        type: string
        description: The version number of the record-level artifact the object describes.
      derivedFrom:
        type: string
        description: Another data record from which the record described here was derived.
      dateRecordCreated:
        type: string
        format: datetime
        description: The date the record was initially created.
      contributions:
        type: array
        ordered: false
        items:
          $ref: '#/$defs/Contribution'
        description: >-
          Describes specific contributions made by an human or software agent to the creation,
          modification, or administrative management of a data record or object.

  Coding:
    type: object
    maturity: draft
    description: >-
      A structured representation of a code for a defined concept in a terminology or code system.
    properties:
      label:
        type: string
        description: The human-readable name for the coded concept, as defined by the code system.
      system:
        type: string
        description: >-
          The terminology/code system that defined the code. May be reported as a free-text name
          (e.g. 'Sequence Ontology'), but it is preferable to provide a uri/url for the system.
          When the 'code' is reported as a CURIE, the 'system' should be reported as the uri that
          the CURIE's prefix expands to (e.g. 'http://purl.obofoundry.org/so.owl/' for the
          Sequence Ontology).
      version:
        type: string
        description: Version of the terminology or code system that provided the code.
      code:
        $ref: '#/$defs/Code'
        description: >-
          A symbol uniquely identifying the concept, as in a syntax defined by the code system.
          CURIE format is preferred where possible (e.g. 'SO:0000704' is the CURIE form of the
          Sequence Ontology code for 'gene').
    required:
      - system
      - code

  ConceptMapping:
    type: object
    maturity: draft
    description: >-
      A mapping to a concept in a terminology or code system.
    properties:
      coding:
        $ref: '#/$defs/Coding'
        description: >-
          A structured representation of a code for a defined concept in a terminology or code system.
      relation:
        description: >-
          A mapping relation between concepts as defined by the Simple Knowledge Organization System (SKOS).
        type: string
        enum:
          - closeMatch
          - exactMatch
          - broadMatch
          - narrowMatch
          - relatedMatch
    required:
      - relation
      - coding

  Extension:
    type: object
    maturity: draft
    description: >-
      The Extension class provides entities with a means to include
      additional attributes that are outside of the specified standard
      but needed by a given content provider or system implementer.
      These extensions are not expected to be natively understood, but
      may be used for pre-negotiated exchange of message attributes
      between systems.
    properties:
      name:
        type: string
        description: >-
          A name for the Extension. Should be indicative of its meaning and/or the type of
          information it value represents.
      value:
        type: [ "number", "string", "boolean", "object", "array", "null" ]
        description: The value of the Extension - can be any primitive or structured object
      description:
        type: string
        description: >-
          A description of the meaning or utility of the Extension, to explain
          the type of information it is meant to hold.
    required:
      - name
      - value

  Code:
    maturity: draft
    description: >-
      Indicates that the value is taken from a set of controlled strings defined elsewhere.
      Technically, a code is restricted to a string which has at least one character and no leading or
      trailing whitespace, and where there is no whitespace other than single spaces in the contents.
    type: string
    pattern: '\S+( \S+)*'
    example: ENSG00000139618

  IRI:
    maturity: draft
    description: >-
      An IRI Reference (either an IRI or a relative-reference), according to `RFC3986 section 4.1
      <https://datatracker.ietf.org/doc/html/rfc3986#section-4.1>` and `RFC3987 section 2.1
      <https://datatracker.ietf.org/doc/html/rfc3987#section-2.1>`. MAY be a JSON Pointer as an IRI fragment, as
      described by `RFC6901 section 6 <https://datatracker.ietf.org/doc/html/rfc6901#section-6>`.
    type: string
    format: iri-reference

  Expression:
    type: object
    maturity: draft
    description: >-
      Representation of a variation by a specified nomenclature or syntax for a Variation object.
      Common examples of expressions for the description of molecular variation include the HGVS
      and ISCN nomenclatures.
    properties:
      syntax:
        type: string
        enum: ["hgvs.c", "hgvs.p", "hgvs.g", "hgvs.m", "hgvs.n", "hgvs.r", "iscn", "gnomad", "spdi"]
        description: >-
          The syntax used to describe the variation. The value should be one of the supported syntaxes.
      value:
        type: string
        description: >-
          The expression of the variation in the specified syntax. The value should be a valid
          expression in the specified syntax.
      syntax_version:
        type: string
        description: >-
          The version of the syntax used to describe the variation. This is particularly important for
          HGVS expressions, as the syntax has evolved over time.
    required:
      - syntax
      - value