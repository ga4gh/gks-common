$schema: "https://json-schema.org/draft/2020-12/schema"
$id: "https://w3id.org/ga4gh/schema/gks-common/1.x/common-source.yaml"
title: GKS Common Library Definitions
strict: true

$defs:
  Entity:
    description: >-
      Entity is the root class of 'common' classes model - those that have identifiers and other general
      metadata like labels, xrefs, urls, descriptions, etc. All common classes descend from and inherit
      its attributes.
    heritableProperties:
      id:
        type: string
        description: >-
          The 'logical' identifier of the entity in the system of record, e.g. a UUID. This 'id' is
          unique within a given system. The identified entity may have a different 'id' in a different
          system, or may refer to an 'id' for the shared concept in another system (e.g. a CURIE).
      label:
        type: string
        description: A primary name for the entity.
      description:
        type: string
        description: A free-text description of the entity.
      mappings:
        type: array
        ordered: false
        items:
          $ref: "#/$defs/ConceptMapping"
        description: >-
          A list of mappings to concepts in terminologies or code systems. Each mapping should
          include a coding and a relation.
      extensions:
        type: array
        ordered: true
        items:
          $ref: "#/$defs/Extension"
        description: >-
          A list of extensions to the entity. Extensions are not expected to be natively understood,
          but may be used for pre-negotiated exchange of message attributes between systems.

  Coding:
    type: object
    maturity: draft
    description: >-
      A structured representation of a code for a defined concept in a terminology or code system.
    properties:
      label:
        type: string
        description: The human-readable name for the coded concept, as defined by the code system.
      system:
        type: string
        description: >-
          The terminology/code system that defined the code. May be reported as a free-text name
          (e.g. 'Sequence Ontology'), but it is preferable to provide a uri/url for the system.
          When the 'code' is reported as a CURIE, the 'system' should be reported as the uri that
          the CURIE's prefix expands to (e.g. 'http://purl.obofoundry.org/so.owl/' for the
          Sequence Ontology).
      version:
        type: string
        description: Version of the terminology or code system that provided the code.
      code:
        $ref: '#/$defs/Code'
        description: >-
          A symbol uniquely identifying the concept, as in a syntax defined by the code system.
          CURIE format is preferred where possible (e.g. 'SO:0000704' is the CURIE form of the
          Sequence Ontology code for 'gene').
    required:
      - system
      - code

  ConceptMapping:
    type: object
    maturity: draft
    description: >-
      A mapping to a concept in a terminology or code system.
    properties:
      coding:
        $ref: '#/$defs/Coding'
        description: >-
          A structured representation of a code for a defined concept in a terminology or code system.
      relation:
        description: >-
          A mapping relation between concepts as defined by the Simple Knowledge Organization System (SKOS).
        type: string
        enum:
          - closeMatch
          - exactMatch
          - broadMatch
          - narrowMatch
          - relatedMatch
    required:
      - relation
      - coding

  Extension:
    type: object
    maturity: draft
    description: >-
      The Extension class provides entities with a means to include
      additional attributes that are outside of the specified standard
      but needed by a given content provider or system implementer.
      These extensions are not expected to be natively understood, but
      may be used for pre-negotiated exchange of message attributes
      between systems.
    properties:
      type:
        type: string
        const: Extension
        description: MUST be "Extension".
      name:
        type: string
        description: >-
          A name for the Extension. Should be indicative of its meaning and/or the type of
          information it value represents.
      value:
        type: [ "number", "string", "boolean", "object", "array", "null" ]
        description: The value of the Extension - can be any primitive or structured object
      extensionDescription:
        type: string
        description: >-
          A description of the meaning or utility of the Extension, to explain
          the type of information it is meant to hold.
    required:
      - name
      - value

  Code:
    maturity: draft
    description: >-
      Indicates that the value is taken from a set of controlled strings defined elsewhere.
      Technically, a code is restricted to a string which has at least one character and no leading or
      trailing whitespace, and where there is no whitespace other than single spaces in the contents.
    type: string
    pattern: '\S+( \S+)*'
    example: ENSG00000139618

  IRI:
    maturity: draft
    description: >-
      An IRI Reference (either an IRI or a relative-reference), according to `RFC3986 section 4.1
      <https://datatracker.ietf.org/doc/html/rfc3986#section-4.1>` and `RFC3987 section 2.1
      <https://datatracker.ietf.org/doc/html/rfc3987#section-2.1>`. MAY be a JSON Pointer as an IRI fragment, as
      described by `RFC6901 section 6 <https://datatracker.ietf.org/doc/html/rfc6901#section-6>`.
    type: string
    format: iri-reference

  DomainEntity:
    inherits: Entity
    description: >-
      An Entity that is specific to a particular biomedical domain such as disease, therapeutics, or genes.
      Domain Entities are considered as 'concept-level' entities, as opposed to particular instances. e.g.
      'Lung Cancer', not 'patient123's lung cancer'. Or 'Erlotinib', not the particular doses given to a
      patient on a specific occasion.
    heritableProperties:
      type:
        type: string
      aliases:
        description: Aliases are alternate names for a Domain Entity.
        ordered: false
        type: array
        items:
          type: string
    heritableRequired:
      - type

  Expression:
    type: object
    maturity: draft
    description: >-
      Representation of a variation by a specified nomenclature or syntax for a Variation object.
      Common examples of expressions for the description of molecular variation include the HGVS
      and ISCN nomenclatures.
    properties:
      syntax:
        type: string
        enum: ["hgvs.c", "hgvs.p", "hgvs.g", "hgvs.m", "hgvs.n", "hgvs.r", "iscn", "gnomad", "spdi"]
        description: >-
          The syntax used to describe the variation. The value should be one of the supported syntaxes.
      value:
        type: string
        description: >-
          The expression of the variation in the specified syntax. The value should be a valid
          expression in the specified syntax.
      syntax_version:
        type: string
        description: >-
          The version of the syntax used to describe the variation. This is particularly important for
          HGVS expressions, as the syntax has evolved over time.
    required:
      - syntax
      - value
